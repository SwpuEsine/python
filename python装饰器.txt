由于函数也是一个对象，而且函数对象可以被赋值给变量，
所以，通过变量也能调用该函数。


>>> def now():
...     print('2015-3-25')
...
>>> f = now
>>> f()
2015-3-25


函数对象有一个__name__属性，可以拿到函数的名字：

>>> now.__name__
'now'
>>> f.__name__
'now'


现在，假设我们要增强now()函数的功能，比如，在函数调用前后自动打印日志，
但又不希望修改now()函数的定义，
这种在代码运行期间动态增加功能的方式，称之为“装饰器”（Decorator）。

类似AOP