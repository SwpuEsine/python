每一个URL可以对应GET和POST请求，当然还有PUT、DELETE等请求，但是我们通常只考虑最常见的GET和POST请求。


代码这么写没法维护的原因是因为WSGI提供的接口虽然比HTTP接口高级了不少，
但和Web App的处理逻辑比，还是比较低级，我们需要在WSGI接口之上能进一步抽象，
让我们专注于用一个函数处理一个URL，至于URL到函数的映射，就交给Web框架来做。


由于用Python开发一个Web框架十分容易，所以Python有上百个开源的Web框架。这里我们先不讨论各种Web框架的优缺点，
直接选择一个比较流行的Web框架――Flask来使用。



用Flask编写Web App比WSGI接口简单（这不是废话么，要是比WSGI还复杂，用框架干嘛？），我们先用pip安装Flask：


Django: Python Web应用开发框架 框架开发


GET表示一个读取请求，将从服务器获得网页数据，/表示URL的路径，URL总是以/开头，
/就表示首页，最后的HTTP/1.1指示采用的HTTP协议版本是1.1。目前HTTP协议的版本就是1.1，
但是大部分服务器也支持1.0版本，主要区别在于1.1版本允许多个HTTP请求复用一个TCP连接，以加快传输速度。



Host: www.sina.com.cn