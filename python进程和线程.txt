很多同学都听说过，现代操作系统比如Mac OS X，UNIX，Linux，Windows等，都是支持“多任务”的操作系统。

真正的并行执行多任务只能在多核CPU上实现，但是，由于任务数量远远多于CPU的核心数量，
所以，操作系统也会自动把很多任务轮流调度到每个核心上执行。


真正的并行执行多任务只能在多核CPU上实现，但是，由于任务数量远远多于CPU的核心数量，
所以，操作系统也会自动把很多任务轮流调度到每个核心上执行。


由于每个进程至少要干一件事，所以，一个进程至少有一个线程。当然，
像Word这种复杂的进程可以有多个线程，多个线程可以同时执行，多线程的执行方式和多进程是一样的，
也是由操作系统在多个线程之间快速切换，让每个线程都短暂地交替运行，
看起来就像同时执行一样。当然，真正地同时执行多线程需要多核CPU才可能实现。

我们前面编写的所有的Python程序，都是执行单任务的进程，也就是只有一个线程。如果我们要同时执行多个任务怎么办？


--------------------------------多任务实现的三种方式--------------------------------------------

多进程模式；
多线程模式；
多进程+多线程模式。
------------------------------------------------------------------------------------------------

同时执行多个任务通常各个任务之间并不是没有关联的，而是需要相互通信和协调，
有时，任务1必须暂停等待任务2完成后才能继续执行，有时，任务3和任务4又不能同时执行，
所以，多进程和多线程的程序的复杂度要远远高于我们前面写的单进程单线程的程序。

-------------------------------单线程实现的话只能放完视频然后放音频-----------------------------

同时执行多个任务通常各个任务之间并不是没有关联的，而是需要相互通信和协调，
有时，任务1必须暂停等待任务2完成后才能继续执行，有时，任务3和任务4又不能同时执行，
所以，多进程和多线程的程序的复杂度要远远高于我们前面写的单进程单线程的程序。

因为复杂度高，调试困难，所以，不是迫不得已，我们也不想编写多任务。但是，
有很多时候，没有多任务还真不行。想想在电脑上看电影，就必须由一个线程播放视频，
另一个线程播放音频，否则，单线程实现的话就只能先把视频播放完再播放音频，
或者先把音频播放完再播放视频，这显然是不行的。

Python既支持多进程，又支持多线程，我们会讨论如何编写这两种多任务程序。


--------------------------------