数据库表是一个二维表，包含多行多列。把一个表的内容用Python的数据结构表示出来的话，
可以用一个list表示多行，list的每一个元素是tuple，表示一行记录，比如，包含id和name的user表：


[
    ('1', 'Michael'),
    ('2', 'Bob'),
    ('3', 'Adam')
]


这就是传说中的ORM技术：Object-Relational Mapping，把关系数据库的表结构映射到对象上。是不是很简单？



class User(object):
    def __init__(self, id, name):
        self.id = id
        self.name = name

[
    User('1', 'Michael'),
    User('2', 'Bob'),
    User('3', 'Adam')
]

在Python中，最有名的ORM框架是SQLAlchemy。我们来看看SQLAlchemy的用法。

$ pip install sqlalchemy

alchemy魔术


# 导入:
from sqlalchemy import Column, String, create_engine
from sqlalchemy.orm import sessionmaker
from sqlalchemy.ext.declarative import declarative_base

# 创建对象的基类:
Base = declarative_base()

# 定义User对象:
class User(Base):
    # 表的名字:
    __tablename__ = 'user'

    # 表的结构:
    id = Column(String(20), primary_key=True)
    name = Column(String(20))

# 初始化数据库连接:
engine = create_engine('mysql+mysqlconnector://root:password@localhost:3306/test')
# 创建DBSession类型:
DBSession = sessionmaker(bind=engine)





最早的软件都是运行在大型机上的，软件使用者通过“哑终端”登陆到大型机上去运行软件。
后来随着PC机的兴起，软件开始主要运行在桌面上，
而数据库这样的软件运行在服务器端，这种Client/Server模式简称CS架构。


最早的软件都是运行在大型机上的，软件使用者通过“哑终端”登陆到大型机上去运行软件。
后来随着PC机的兴起，软件开始主要运行在桌面上，
而数据库这样的软件运行在服务器端，这种Client/Server模式简称CS架构。