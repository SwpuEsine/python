多进程模式最大的优点就是稳定性高，因为一个子进程崩溃了，不会影响主进程和其他子进程。
（当然主进程挂了所有进程就全挂了，但是Master进程只负责分配任务，挂掉的概率低）
著名的Apache最早就是采用多进程模式。


多进程模式的缺点是创建进程的代价大，在Unix/Linux系统下，用fork调用还行，
在Windows下创建进程开销巨大。另外，操作系统能同时运行的进程数也是有限的，
在内存和CPU的限制下，如果有几千个进程同时运行，操作系统连调度都会成问题。


IO密集型任务执行期间，99%的时间都花在IO上，花在CPU上的时间很少，因此，
用运行速度极快的C语言替换用Python这样运行速度极低的脚本语言，完全无法提升运行效率。对于IO密集型任务，
最合适的语言就是开发效率最高（代码量最少）的语言，脚本语言是首选，C语言最差。


--------------------------------------------异步IO---------------------------------------------

考虑到CPU和IO之间巨大的速度差异，一个任务在执行的过程中大部分时间都在等待IO操作，
单进程单线程模型会导致别的任务无法并行执行，
因此，我们才需要多进程模型或者多线程模型来支持多任务并发执行。

进程间通信  操作系统底层封装了很多信息
